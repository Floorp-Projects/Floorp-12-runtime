diff --git a/browser/components/tabbrowser/AsyncTabSwitcher.sys.mjs b/browser/components/tabbrowser/AsyncTabSwitcher.sys.mjs
index 9f4aa535e0..8801d03e8b 100644
--- a/browser/components/tabbrowser/AsyncTabSwitcher.sys.mjs
+++ b/browser/components/tabbrowser/AsyncTabSwitcher.sys.mjs
@@ -39,6 +39,10 @@ XPCOMUtils.defineLazyPreferenceGetter(
   300
 );
 
+function floorpSplitViewIsEnabled() {
+  return Services.prefs.getBoolPref("floorp.browser.splitView.working", false);
+}
+
 /**
  * The tab switcher is responsible for asynchronously switching
  * tabs in e10s. It waits until the new tab is ready (i.e., the
@@ -279,7 +283,7 @@ export class AsyncTabSwitcher {
         browser.docShellIsActive = true;
       }
 
-      if (remoteTab) {
+      if (remoteTab && !floorpSplitViewIsEnabled()) {
         browser.renderLayers = true;
         remoteTab.priorityHint = true;
       }
@@ -291,7 +295,7 @@ export class AsyncTabSwitcher {
       // Setting the docShell to be inactive will also cause it
       // to stop rendering layers.
       browser.docShellIsActive = false;
-      if (remoteTab) {
+      if (remoteTab && !floorpSplitViewIsEnabled()) {
         remoteTab.priorityHint = false;
       }
       if (!browser.hasLayers) {
@@ -364,7 +368,7 @@ export class AsyncTabSwitcher {
     // constructing BrowserChild's, layer trees, etc, by showing a blank
     // tab instead and focusing it immediately.
     let shouldBeBlank = false;
-    if (requestedBrowser.isRemoteBrowser) {
+    if (requestedBrowser.isRemoteBrowser && !floorpSplitViewIsEnabled()) {
       // If a tab is remote and the window is not minimized, we can show a
       // blank tab instead of a spinner in the following cases:
       //
@@ -399,7 +403,7 @@ export class AsyncTabSwitcher {
       }
     }
 
-    if (requestedBrowser.isRemoteBrowser) {
+    if (requestedBrowser.isRemoteBrowser && !floorpSplitViewIsEnabled()) {
       this.addLogFlag("isRemote");
     }
 
@@ -824,7 +828,7 @@ export class AsyncTabSwitcher {
     this.logState(
       `onRemotenessChange(${tab._tPos}, ${tab.linkedBrowser.isRemoteBrowser})`
     );
-    if (!tab.linkedBrowser.isRemoteBrowser) {
+    if (!tab.linkedBrowser.isRemoteBrowser && !floorpSplitViewIsEnabled()) {
       if (this.getTabState(tab) == this.STATE_LOADING) {
         this.onLayersReady(tab.linkedBrowser);
       } else if (this.getTabState(tab) == this.STATE_UNLOADING) {
@@ -1017,7 +1021,8 @@ export class AsyncTabSwitcher {
     if (
       lazy.gTabCacheSize > 1 &&
       tab.linkedBrowser.isRemoteBrowser &&
-      tab.linkedBrowser.currentURI.spec != "about:blank"
+      tab.linkedBrowser.currentURI.spec != "about:blank" &&
+      !floorpSplitViewIsEnabled()
     ) {
       let tabIndex = this.tabLayerCache.indexOf(tab);
 
