diff --git a/browser/components/tabbrowser/content/tabbrowser.js b/browser/components/tabbrowser/content/tabbrowser.js
index ef857bd81f2cd..2df5c35896d46 100644
--- a/browser/components/tabbrowser/content/tabbrowser.js
+++ b/browser/components/tabbrowser/content/tabbrowser.js
@@ -3239,6 +3239,27 @@
         let tab;
         let tabWasReused = false;
 
+        /*@nora:inject:start*/
+        if (tabData.floorpDisableHistory) {
+          continue;
+        }
+
+        let floorpWorkspaceId,
+          floorpLastShowWorkspaceId,
+          floorpSSB;
+
+
+        floorpWorkspaceId = tabData.floorpWorkspaceId ? tabData.floorpWorkspaceId : JSON.parse(
+          Services.prefs.getStringPref("floorp.workspaces.v3.data")
+        ).workspaces[0].id
+        floorpLastShowWorkspaceId = tabData.floorpLastShowWorkspaceId;
+        floorpSSB = tabData.floorpSSB;
+
+        if (floorpSSB) {
+          window.close();
+        }
+        /*@nora:inject:end*/
+
         // Re-use existing selected tab if possible to avoid the overhead of
         // selecting a new tab.
         if (
@@ -3248,6 +3269,28 @@
         ) {
           tabWasReused = true;
           tab = this.selectedTab;
+
+          /*@nora:inject:start*/
+          if (floorpWorkspaceId) {
+            tab.setAttribute(
+              "floorpWorkspaceId",
+              floorpWorkspaceId
+            );
+          }
+
+          if (floorpLastShowWorkspaceId) {
+            tab.setAttribute(
+              "floorpWorkspaceLastShowId",
+              floorpLastShowWorkspaceId
+            );
+          }
+
+          if (floorpSSB) {
+            tab.setAttribute("floorpSSB", floorpSSB);
+          }
+          /*@nora:inject:end*/
+
+
           if (!tabData.pinned) {
             this.unpinTab(tab);
           } else {
@@ -3297,6 +3340,23 @@
             preferredRemoteType,
           });
 
+          /*@nora:inject:start*/
+          if (floorpWorkspaceId) {
+            tab.setAttribute(
+              "floorpWorkspaceId",
+              floorpWorkspaceId
+            );
+          }
+
+          if (floorpLastShowWorkspaceId) {
+            tab.setAttribute(
+              "floorpWorkspaceLastShowId",
+              floorpLastShowWorkspaceId
+            );
+          }
+          /*@nora:inject:end*/
+
+
           if (select) {
             tabToSelect = tab;
           }
@@ -4221,6 +4281,14 @@
         aTab,
         this
       );
+       /*@nora:inject:start*/
+      // Force to close & Make do not save history of the tab.
+      try {
+        this._endRemoveTab(aTab);
+      } catch (e) {
+        console.warn(e);
+      }
+      /*@nora:inject:end*/
     },
 
     _hasBeforeUnload(aTab) {
